/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  BigNumberish,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  ScarIndexOracle,
  ScarIndexOracleInterface,
} from "../../contracts/ScarIndexOracle";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "initialOwner",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "initialIndex",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "newIndex",
        type: "uint256",
      },
    ],
    name: "IndexUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "getIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "newIndex",
        type: "uint256",
      },
    ],
    name: "updateIndex",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b506040516107ba3803806107ba83398181016040528101906100329190610257565b81600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036100a55760006040517f1e4fbdf700000000000000000000000000000000000000000000000000000000815260040161009c91906102a6565b60405180910390fd5b6100b4816100fa60201b60201c565b50806001819055507facfc085c9be45d2b3f9e5c09a19d4a95749cc16939519c13e090de3a4cb192c6816040516100eb91906102d0565b60405180910390a150506102eb565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006101ee826101c3565b9050919050565b6101fe816101e3565b811461020957600080fd5b50565b60008151905061021b816101f5565b92915050565b6000819050919050565b61023481610221565b811461023f57600080fd5b50565b6000815190506102518161022b565b92915050565b6000806040838503121561026e5761026d6101be565b5b600061027c8582860161020c565b925050602061028d85828601610242565b9150509250929050565b6102a0816101e3565b82525050565b60006020820190506102bb6000830184610297565b92915050565b6102ca81610221565b82525050565b60006020820190506102e560008301846102c1565b92915050565b6104c0806102fa6000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c8063231f5c541461005c578063715018a61461007857806381045ead146100825780638da5cb5b146100a0578063f2fde38b146100be575b600080fd5b6100766004803603810190610071919061037e565b6100da565b005b610080610123565b005b61008a610137565b60405161009791906103ba565b60405180910390f35b6100a8610141565b6040516100b59190610416565b60405180910390f35b6100d860048036038101906100d3919061045d565b61016a565b005b6100e26101f0565b806001819055507facfc085c9be45d2b3f9e5c09a19d4a95749cc16939519c13e090de3a4cb192c68160405161011891906103ba565b60405180910390a150565b61012b6101f0565b6101356000610277565b565b6000600154905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6101726101f0565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036101e45760006040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016101db9190610416565b60405180910390fd5b6101ed81610277565b50565b6101f861033b565b73ffffffffffffffffffffffffffffffffffffffff16610216610141565b73ffffffffffffffffffffffffffffffffffffffff16146102755761023961033b565b6040517f118cdaa700000000000000000000000000000000000000000000000000000000815260040161026c9190610416565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600033905090565b600080fd5b6000819050919050565b61035b81610348565b811461036657600080fd5b50565b60008135905061037881610352565b92915050565b60006020828403121561039457610393610343565b5b60006103a284828501610369565b91505092915050565b6103b481610348565b82525050565b60006020820190506103cf60008301846103ab565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610400826103d5565b9050919050565b610410816103f5565b82525050565b600060208201905061042b6000830184610407565b92915050565b61043a816103f5565b811461044557600080fd5b50565b60008135905061045781610431565b92915050565b60006020828403121561047357610472610343565b5b600061048184828501610448565b9150509291505056fea26469706673582212203200c73423b2f60831558434b6aa559dba940740e3acbcf436d544e0fe30f02c64736f6c63430008180033";

type ScarIndexOracleConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ScarIndexOracleConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ScarIndexOracle__factory extends ContractFactory {
  constructor(...args: ScarIndexOracleConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    initialOwner: AddressLike,
    initialIndex: BigNumberish,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      initialOwner,
      initialIndex,
      overrides || {}
    );
  }
  override deploy(
    initialOwner: AddressLike,
    initialIndex: BigNumberish,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(initialOwner, initialIndex, overrides || {}) as Promise<
      ScarIndexOracle & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): ScarIndexOracle__factory {
    return super.connect(runner) as ScarIndexOracle__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ScarIndexOracleInterface {
    return new Interface(_abi) as ScarIndexOracleInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): ScarIndexOracle {
    return new Contract(address, _abi, runner) as unknown as ScarIndexOracle;
  }
}
