/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../common";
import type { ScarCoin, ScarCoinInterface } from "../../contracts/ScarCoin";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "initialOwner",
        type: "address",
      },
      {
        internalType: "address",
        name: "_oracleAddress",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "allowance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "needed",
        type: "uint256",
      },
    ],
    name: "ERC20InsufficientAllowance",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "needed",
        type: "uint256",
      },
    ],
    name: "ERC20InsufficientBalance",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "approver",
        type: "address",
      },
    ],
    name: "ERC20InvalidApprover",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
    ],
    name: "ERC20InvalidReceiver",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "ERC20InvalidSender",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "ERC20InvalidSpender",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "currentIndex",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "requiredThreshold",
        type: "uint256",
      },
    ],
    name: "MintingNotAllowed",
    type: "error",
  },
  {
    inputs: [],
    name: "OracleAddressCannotBeZero",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "newOracle",
        type: "address",
      },
    ],
    name: "OracleUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "newThreshold",
        type: "uint256",
      },
    ],
    name: "ThresholdUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "mintThreshold",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "oracle",
    outputs: [
      {
        internalType: "contract ScarIndexOracle",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_newThreshold",
        type: "uint256",
      },
    ],
    name: "setMintThreshold",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_newOracleAddress",
        type: "address",
      },
    ],
    name: "setOracle",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162001d6938038062001d6983398181016040528101906200003791906200033b565b816040518060400160405280600881526020017f53636172436f696e0000000000000000000000000000000000000000000000008152506040518060400160405280600481526020017f53434152000000000000000000000000000000000000000000000000000000008152508160039081620000b59190620005fc565b508060049081620000c79190620005fc565b505050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036200013f5760006040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401620001369190620006f4565b60405180910390fd5b62000150816200020b60201b60201c565b50600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603620001b8576040517f7b2f330800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b80600660006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506207a120600781905550505062000711565b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006200030382620002d6565b9050919050565b6200031581620002f6565b81146200032157600080fd5b50565b60008151905062000335816200030a565b92915050565b60008060408385031215620003555762000354620002d1565b5b6000620003658582860162000324565b9250506020620003788582860162000324565b9150509250929050565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806200040457607f821691505b6020821081036200041a5762000419620003bc565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302620004847fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8262000445565b62000490868362000445565b95508019841693508086168417925050509392505050565b6000819050919050565b6000819050919050565b6000620004dd620004d7620004d184620004a8565b620004b2565b620004a8565b9050919050565b6000819050919050565b620004f983620004bc565b620005116200050882620004e4565b84845462000452565b825550505050565b600090565b6200052862000519565b62000535818484620004ee565b505050565b5b818110156200055d57620005516000826200051e565b6001810190506200053b565b5050565b601f821115620005ac57620005768162000420565b620005818462000435565b8101602085101562000591578190505b620005a9620005a08562000435565b8301826200053a565b50505b505050565b600082821c905092915050565b6000620005d160001984600802620005b1565b1980831691505092915050565b6000620005ec8383620005be565b9150826002028217905092915050565b620006078262000382565b67ffffffffffffffff8111156200062357620006226200038d565b5b6200062f8254620003eb565b6200063c82828562000561565b600060209050601f8311600181146200067457600084156200065f578287015190505b6200066b8582620005de565b865550620006db565b601f198416620006848662000420565b60005b82811015620006ae5784890151825560018201915060208501945060208101905062000687565b86831015620006ce5784890151620006ca601f891682620005be565b8355505b6001600288020188555050505b505050505050565b620006ee81620002f6565b82525050565b60006020820190506200070b6000830184620006e3565b92915050565b61164880620007216000396000f3fe608060405234801561001057600080fd5b50600436106101165760003560e01c80637dc0d1d0116100a2578063a0712d6811610071578063a0712d68146102bf578063a9059cbb146102db578063cd02bd7f1461030b578063dd62ed3e14610327578063f2fde38b1461035757610116565b80637dc0d1d0146102475780638da5cb5b1461026557806395d89b41146102835780639c8dead2146102a157610116565b8063313ce567116100e9578063313ce567146101b757806342966c68146101d557806370a08231146101f1578063715018a6146102215780637adbf9731461022b57610116565b806306fdde031461011b578063095ea7b31461013957806318160ddd1461016957806323b872dd14610187575b600080fd5b610123610373565b604051610130919061118a565b60405180910390f35b610153600480360381019061014e9190611245565b610405565b60405161016091906112a0565b60405180910390f35b610171610428565b60405161017e91906112ca565b60405180910390f35b6101a1600480360381019061019c91906112e5565b610432565b6040516101ae91906112a0565b60405180910390f35b6101bf610461565b6040516101cc9190611354565b60405180910390f35b6101ef60048036038101906101ea919061136f565b61046a565b005b61020b6004803603810190610206919061139c565b610477565b60405161021891906112ca565b60405180910390f35b6102296104bf565b005b6102456004803603810190610240919061139c565b6104d3565b005b61024f6105bc565b60405161025c9190611428565b60405180910390f35b61026d6105e2565b60405161027a9190611452565b60405180910390f35b61028b61060c565b604051610298919061118a565b60405180910390f35b6102a961069e565b6040516102b691906112ca565b60405180910390f35b6102d960048036038101906102d4919061136f565b6106a4565b005b6102f560048036038101906102f09190611245565b610791565b60405161030291906112a0565b60405180910390f35b6103256004803603810190610320919061136f565b6107b4565b005b610341600480360381019061033c919061146d565b6107fd565b60405161034e91906112ca565b60405180910390f35b610371600480360381019061036c919061139c565b610884565b005b606060038054610382906114dc565b80601f01602080910402602001604051908101604052809291908181526020018280546103ae906114dc565b80156103fb5780601f106103d0576101008083540402835291602001916103fb565b820191906000526020600020905b8154815290600101906020018083116103de57829003601f168201915b5050505050905090565b60008061041061090a565b905061041d818585610912565b600191505092915050565b6000600254905090565b60008061043d61090a565b905061044a858285610924565b6104558585856109b9565b60019150509392505050565b60006012905090565b6104743382610aad565b50565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6104c7610b2f565b6104d16000610bb6565b565b6104db610b2f565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610541576040517f7b2f330800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b80600660006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507f3df77beb5db05fcdd70a30fc8adf3f83f9501b68579455adbd100b8180940394816040516105b19190611452565b60405180910390a150565b600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60606004805461061b906114dc565b80601f0160208091040260200160405190810160405280929190818152602001828054610647906114dc565b80156106945780601f1061066957610100808354040283529160200191610694565b820191906000526020600020905b81548152906001019060200180831161067757829003601f168201915b5050505050905090565b60075481565b6000600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166381045ead6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610713573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107379190611522565b905060075481101561078357806007546040517e0cd76900000000000000000000000000000000000000000000000000000000815260040161077a92919061154f565b60405180910390fd5b61078d3383610c7c565b5050565b60008061079c61090a565b90506107a98185856109b9565b600191505092915050565b6107bc610b2f565b806007819055507fadfa8ecb21b6962ebcd0adbd9ab985b7b4c5b5eb3b0dead683171565c7bfe171816040516107f291906112ca565b60405180910390a150565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b61088c610b2f565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036108fe5760006040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016108f59190611452565b60405180910390fd5b61090781610bb6565b50565b600033905090565b61091f8383836001610cfe565b505050565b600061093084846107fd565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8110156109b357818110156109a3578281836040517ffb8f41b200000000000000000000000000000000000000000000000000000000815260040161099a93929190611578565b60405180910390fd5b6109b284848484036000610cfe565b5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610a2b5760006040517f96c6fd1e000000000000000000000000000000000000000000000000000000008152600401610a229190611452565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610a9d5760006040517fec442f05000000000000000000000000000000000000000000000000000000008152600401610a949190611452565b60405180910390fd5b610aa8838383610ed5565b505050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610b1f5760006040517f96c6fd1e000000000000000000000000000000000000000000000000000000008152600401610b169190611452565b60405180910390fd5b610b2b82600083610ed5565b5050565b610b3761090a565b73ffffffffffffffffffffffffffffffffffffffff16610b556105e2565b73ffffffffffffffffffffffffffffffffffffffff1614610bb457610b7861090a565b6040517f118cdaa7000000000000000000000000000000000000000000000000000000008152600401610bab9190611452565b60405180910390fd5b565b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610cee5760006040517fec442f05000000000000000000000000000000000000000000000000000000008152600401610ce59190611452565b60405180910390fd5b610cfa60008383610ed5565b5050565b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603610d705760006040517fe602df05000000000000000000000000000000000000000000000000000000008152600401610d679190611452565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610de25760006040517f94280d62000000000000000000000000000000000000000000000000000000008152600401610dd99190611452565b60405180910390fd5b81600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508015610ecf578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92584604051610ec691906112ca565b60405180910390a35b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610f27578060026000828254610f1b91906115de565b92505081905550610ffa565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015610fb3578381836040517fe450d38c000000000000000000000000000000000000000000000000000000008152600401610faa93929190611578565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550505b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036110435780600260008282540392505081905550611090565b806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516110ed91906112ca565b60405180910390a3505050565b600081519050919050565b600082825260208201905092915050565b60005b83811015611134578082015181840152602081019050611119565b60008484015250505050565b6000601f19601f8301169050919050565b600061115c826110fa565b6111668185611105565b9350611176818560208601611116565b61117f81611140565b840191505092915050565b600060208201905081810360008301526111a48184611151565b905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006111dc826111b1565b9050919050565b6111ec816111d1565b81146111f757600080fd5b50565b600081359050611209816111e3565b92915050565b6000819050919050565b6112228161120f565b811461122d57600080fd5b50565b60008135905061123f81611219565b92915050565b6000806040838503121561125c5761125b6111ac565b5b600061126a858286016111fa565b925050602061127b85828601611230565b9150509250929050565b60008115159050919050565b61129a81611285565b82525050565b60006020820190506112b56000830184611291565b92915050565b6112c48161120f565b82525050565b60006020820190506112df60008301846112bb565b92915050565b6000806000606084860312156112fe576112fd6111ac565b5b600061130c868287016111fa565b935050602061131d868287016111fa565b925050604061132e86828701611230565b9150509250925092565b600060ff82169050919050565b61134e81611338565b82525050565b60006020820190506113696000830184611345565b92915050565b600060208284031215611385576113846111ac565b5b600061139384828501611230565b91505092915050565b6000602082840312156113b2576113b16111ac565b5b60006113c0848285016111fa565b91505092915050565b6000819050919050565b60006113ee6113e96113e4846111b1565b6113c9565b6111b1565b9050919050565b6000611400826113d3565b9050919050565b6000611412826113f5565b9050919050565b61142281611407565b82525050565b600060208201905061143d6000830184611419565b92915050565b61144c816111d1565b82525050565b60006020820190506114676000830184611443565b92915050565b60008060408385031215611484576114836111ac565b5b6000611492858286016111fa565b92505060206114a3858286016111fa565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806114f457607f821691505b602082108103611507576115066114ad565b5b50919050565b60008151905061151c81611219565b92915050565b600060208284031215611538576115376111ac565b5b60006115468482850161150d565b91505092915050565b600060408201905061156460008301856112bb565b61157160208301846112bb565b9392505050565b600060608201905061158d6000830186611443565b61159a60208301856112bb565b6115a760408301846112bb565b949350505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006115e98261120f565b91506115f48361120f565b925082820190508082111561160c5761160b6115af565b5b9291505056fea26469706673582212206ddb8af4bd054d5e0e2b8daed6efe763b126ca6bb1f5908344cf204c8b572d6964736f6c63430008180033";

type ScarCoinConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ScarCoinConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ScarCoin__factory extends ContractFactory {
  constructor(...args: ScarCoinConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    initialOwner: AddressLike,
    _oracleAddress: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      initialOwner,
      _oracleAddress,
      overrides || {}
    );
  }
  override deploy(
    initialOwner: AddressLike,
    _oracleAddress: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(
      initialOwner,
      _oracleAddress,
      overrides || {}
    ) as Promise<
      ScarCoin & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): ScarCoin__factory {
    return super.connect(runner) as ScarCoin__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ScarCoinInterface {
    return new Interface(_abi) as ScarCoinInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): ScarCoin {
    return new Contract(address, _abi, runner) as unknown as ScarCoin;
  }
}
